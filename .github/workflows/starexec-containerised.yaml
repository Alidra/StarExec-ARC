name: Build StarExec Container

on:
  push:
    branches:
      - main
    paths:
      - 'starexec-containerised/**'
  pull_request:
    paths:
      - 'starexec-containerised/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version tag'
        default: 'latest'
        required: false

env:
  IMAGE_NAME: tptpstarexec/starexec
  WORKDIR: starexec-containerised

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write

    steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Generate SSH key pairs
          run: |
              cd ${{ env.WORKDIR }}
              ssh-keygen -t ed25519 -N '' -f starexec_podman_key
              echo "SSH keys generated"

        - name: Set version
          id: version
          run: |
              VERSION=${{ github.event.inputs.version || 'latest' }}
              echo "VERSION=$VERSION" >> $GITHUB_ENV
              echo "Using version: $VERSION"

        - name: Build image
          uses: docker/build-push-action@v5
          with:
              context: ${{ env.WORKDIR }}
              push: false
              load: true
              tags: ${{ env.IMAGE_NAME }}:${{ github.env.VERSION }}
              cache-from: type=gha
              cache-to: type=gha,mode=max

        # - name: Log in to Docker Hub
        #   if: github.event_name != 'pull_request'
        #   uses: docker/login-action@v3
        #   with:
        #       username: ${{ secrets.DOCKER_USERNAME }}
        #       password: ${{ secrets.DOCKER_PASSWORD }}

        # - name: Push to Docker Hub
        #   if: github.event_name != 'pull_request'
        #   uses: docker/build-push-action@v5
        #   with:
        #       context: ${{ env.WORKDIR }}
        #       push: true
        #       tags: ${{ env.IMAGE_NAME }}:${{ github.env.VERSION }}
        #       cache-from: type=gha

        # - name: Add latest tag
        #   if: github.event_name != 'pull_request' && github.env.VERSION != 'latest'
        #   run: |
        #       docker tag ${{ env.IMAGE_NAME }}:${{ github.env.VERSION }} ${{ env.IMAGE_NAME }}:latest
        #       docker push ${{ env.IMAGE_NAME }}:latest

        - name: Generate log artifact
          run: |
              cd ${{ env.WORKDIR }}
              LOG_FILE=build-${{ github.env.VERSION }}.log
              [ -f $LOG_FILE ] || echo "Build completed at $(date)" > $LOG_FILE

        - name: Upload build log
          uses: actions/upload-artifact@v3
          with:
              name: build-logs
              path: ${{ env.WORKDIR }}/build-${{ github.env.VERSION }}.log
              retention-days: 7
