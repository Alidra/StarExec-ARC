name: Build StarExec Container

on:
  push:
    branches:
      - master
    paths:
      - 'starexec-containerised/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version tag'
        default: 'latest'
        required: false

env:
  WORKDIR: starexec-containerised

jobs:
  build:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate SSH keys if missing
        run: |
          KEY_FILE=${{ env.WORKDIR }}/starexec_podman_key
          echo "Checking if SSH keys exist in the workspace..."
          if [ ! -f "$KEY_FILE" ]; then
            echo "Keys not found. Generating new SSH keys..."
            ssh-keygen -t ed25519 -N "" -f "$KEY_FILE"
          else
            echo "SSH keys already exist."
          fi
      - name: Build and Push Docker Image
        run: |
          echo "Building and pushing Docker images..."
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          
          # Set version tag based on input or use date-based versioning
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION_TAG="${{ github.event.inputs.version }}"
          else
            VERSION_TAG=$(date +%Y.%m.%d)-${GITHUB_SHA:0:8}
          fi

          docker buildx build --builder ${{ steps.buildx.outputs.name }} \
            --platform linux/amd64 \
            --tag ghcr.io/$REPO_LOWER:latest \
            --tag ghcr.io/$REPO_LOWER:$VERSION_TAG \
            --tag ghcr.io/$REPO_LOWER:${{ github.sha }} \
            --push ${{ env.WORKDIR }}

      - name: Make package public
        run: |
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          PACKAGE_NAME=$(echo "$REPO_LOWER" | cut -d'/' -f2)
          curl -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME/visibility \
            -d '{"visibility":"public"}'
